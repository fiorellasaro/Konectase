CREATE TABLE POSTULANTE (
    -- GENERA UN ID AUTO INCREMENTO
    ID_POSTULANTE SERIAL PRIMARY KEY, 

    TIPODOC VARCHAR(5) NOT NULL,
    NUMDOC VARCHAR(15) NOT NULL,
    NOMBRES VARCHAR(40) NOT NULL,
    APELLIDO_P VARCHAR(30) NOT NULL,
    APELLIDO_M VARCHAR(30) NOT NULL,
    NOMBRE_SOCIAL VARCHAR(20),
    NACIONALIDAD VARCHAR(30) NOT NULL,
    ESTADO_CIVIL VARCHAR(20) NOT NULL,
    FECHA_NAC DATE NOT NULL,
    GENERO VARCHAR(15) NOT NULL,
    CORREO VARCHAR(40) NOT NULL,
    TELEFONO INT NOT NULL,
    COORD_DIRECCION POINT NOT NULL,
    TEXT_DIRECCION VARCHAR(200) NOT NULL,
    N_HIJOS INT NOT NULL,
    COMO_KONECTA VARCHAR(50) NOT NULL,
    REFERIDOS VARCHAR(100)

);


CREATE TABLE DATOS_PROFESIONALES
(
    ID_PROFESIONALES SERIAL,

    GRADO_FORMACION VARCHAR(30) NOT NULL,
    INSTITUCION VARCHAR(50) NOT NULL,
    ESTADO_ESTUDIOS VARCHAR(20) NOT NULL,
    RUBRO_CARRERA VARCHAR(40),
    COORD_ESTUDIO POINT,
    TEXT_DIR_ESTUDIO VARCHAR(200),
    HORARIO_ESTUDIO VARCHAR(20),
    ID_POSTULANTE INTEGER NOT NULL,

    PRIMARY KEY (ID_PROFESIONALES, ID_POSTULANTE),
    FOREIGN KEY (ID_POSTULANTE) REFERENCES POSTULANTE (ID_POSTULANTE) ON DELETE CASCADE


);


CREATE TABLE DATOS_EXPERIENCIA
(
    ID_EXPERIENCIA SERIAL,
    FLAG_SE INT NOT NULL,
    FLAG_EC INT NOT NULL,
    FLAG_EO INT NOT NULL,

    SE_P_REDES CHAR,
    SE_P_VENTAS CHAR,
    SE_P_ATC CHAR,
    SE_P_CROSSELLING CHAR,
    SE_P_BACKOF CHAR,
    SE_EXPECT_SALARIAL INTEGER[],

    EC_EMPRESA VARCHAR(50),
    EC_CLIENTE VARCHAR(50),
    EC_RUBRO_CLIENTE VARCHAR(100),
    EC_SEGMENTO VARCHAR(30),
    EC_TIEMPO_EXP INT,
    EC_RETRIBUCION_BASICO INT,
    EC_RETRIBUCION_COMISIONES INT,


    EO_EMPRESA VARCHAR(50),
    EO_RUBRO_EMPRESA VARCHAR(100),
    EO_PUESTO VARCHAR(50),
    EO_TIEMPO_EXP INT,
    EO_RETRIBUCION_BASICO INT,
    EO_RETRIBUCION_COMISIONES INT,



    ID_POSTULANTE INTEGER NOT NULL,
    PRIMARY KEY (ID_EXPERIENCIA, ID_POSTULANTE),
    FOREIGN KEY (ID_POSTULANTE) REFERENCES POSTULANTE (ID_POSTULANTE) ON DELETE CASCADE


);



CREATE TABLE DATOS_ROTACION
(
    ID_ROTACION SERIAL,


    ACTIVIDADES VARCHAR(50) NOT NULL,
    COORD_ACTIVIDAD POINT,
    TEXT_DIR_ACTIVIDAD VARCHAR(200),
    HORARIO_ACTIVIDAD VARCHAR(20),
    FAM_POSTULANTE INT NOT NULL,
    MOTIVACION VARCHAR(50) NOT NULL,
    ACTIVIDAD_TIEMPO_LIBRE VARCHAR[] NOT NULL,
    SEDE_PREFERENCIA VARCHAR[] NOT NULL,


    ID_POSTULANTE INTEGER NOT NULL,
    PRIMARY KEY (ID_ROTACION, ID_POSTULANTE),
    FOREIGN KEY (ID_POSTULANTE) REFERENCES POSTULANTE (ID_POSTULANTE) ON DELETE CASCADE


);


CREATE TABLE DATOS_FAMILIARES
(
    ID_FAMILIARES SERIAL,


    PARENTESCO VARCHAR(50) NOT NULL,
    EDAD INT NOT NULL,
    TRABAJA BOOLEAN NOT NULL,


    ID_POSTULANTE INTEGER NOT NULL,
    PRIMARY KEY (ID_FAMILIARES, ID_POSTULANTE),
    FOREIGN KEY (ID_POSTULANTE) REFERENCES POSTULANTE (ID_POSTULANTE) ON DELETE CASCADE


);




CREATE TABLE datos_personales
(
    id_dp SERIAL,
    id INTEGER NOT NULL,
    tipodoc VARCHAR(30),
    PRIMARY KEY (id_dp, id),
    FOREIGN KEY(id) REFERENCES prueba(id)

);



CREATE TABLE datos_prueba
(
    id_dp SERIAL,
    car CHAR,
    llanta VARCHAR[],
    PRIMARY KEY (id_dp)

);

CREATE TABLE prueba_fam
(
    id_dp SERIAL,
    trabaja BOOLEAN,
    PRIMARY KEY (id_dp)

);


INSERT INTO datos_prueba(car, llanta)
VALUES ('a', '{1,2}');


CREATE TABLE datos_point
(
    id_dp SERIAL PRIMARY KEY,
    puntos POINT, 
    nombre VARCHAR(29)

);


insert into datos_personales
    (tipodoc)
VALUES
    ('DNI');

insert into datos_personales
    (tipodoc, numdoc, nombres, apellido_p, apellido_m, nombre_social,sede_pref)
VALUES
    ('DNI', 72722297, 'Fiorella', 'Sanchez', 'Rodriguez', '', '{"surquillo","crillon","fenix"}');

SELECT sede_pref[1]
FROM datos_personales
WHERE numdoc = 72722297;
-- RESULT surquillo

-- ELIMINAR TABLA POSTULANTE Y TODOS LAS TABLAS HIJAS
DROP TABLE postulante CASCADE;

--SABER ELEMENTOS DE LA TABLA Y TIPO DE DATO
\d+ prueba



CREATE TABLE fruits
(
    id_fruits INTEGER,
    id INTEGER,
    tipo_fruta VARCHAR(30),
    PRIMARY KEY (id_fruits),
    FOREIGN KEY (id) REFERENCES prueba (id)
);